name: Create Changeset Release

on:
  workflow_dispatch:
    inputs:
      node_version:
        description: 'Node version'
        required: true
        default: '20'
      release_front_end:
        required: true
        default: 'false'
        type: boolean
        description: 'Release front-end package'
      release_plugin_1:
        required: true
        default: 'false'
        type: boolean
        description: 'Release plugin_1 package'
      release_plugin_component:
        required: true
        default: 'false'
        type: boolean
        description: 'Release plugin_component package'
      release_root:
        required: true
        default: 'false'
        type: boolean
        description: 'Release monorepo-react-template'

env:
  GH_TOKEN: ${{ secrets.CHANGESSETS_PAT }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-changeset-release:
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release')
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      packages: 'write'
      actions: 'read'
      pull-requests: 'write'

    steps:
      # 1. Checkout репозиторий
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Установка Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      # - name: Define package to release
      #   id: select-package
      #   run: |
      #     PACKAGE_NAME=""
      #     if [ "${{ inputs.release_front_end }}" == "true" ]; then
      #       PACKAGE_NAME="front-end"
      #     elif [ "${{ inputs.release_plugin_1 }}" == "true" ]; then
      #       PACKAGE_NAME="plugin-1"
      #     elif [ "${{ inputs.release_plugin_component }}" == "true" ]; then
      #       PACKAGE_NAME="plugin-component"
      #     elif [ "${{ inputs.release_root }}" == "true" ]; then
      #       PACKAGE_NAME="monorepo-react-template"
      #     fi
      #     echo "PACKAGE_NAME: $PACKAGE_NAME"

      #     if [ -z "$PACKAGE_NAME" ]; then
      #       echo "No package selected for release."
      #       exit 1
      #     fi

      #     # echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
      #     echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      # - name: Remove old meta files
      #   run: |
      #     find . -name "*.meta.json" -exec rm -f {} \;

      - name: Set up Git user
        run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        # git config --global user.name "GitHub Actions Bot"
        # git config --global user.email "actions@github.com"

      # - name: Run Changeset Version
      #   run: |
      #     DEBUG=changesets:* env GH_TOKEN=$GH_TOKEN npx changeset version --filter ${{ steps.select-package.outputs.package_name }} --exact
      #     git add .
      #     # git commit -m "chore: update changelog and version for ${{ steps.select-package.outputs.package_name }}"
      #     # git push origin ${{ github.head_ref }}

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GH_TOKEN: ${{ secrets.CHANGESSETS_PAT }}

      # - name: Run Changeset Publish
      #   run: |
      #     npm run changeset-publish