name: Create Issue Reference in PR Template

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  update-template:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        npm install @octokit/rest

    - name: Extract branch name
      run: |
        BRANCH_NAME="${GITHUB_HEAD_REF}"
        ISSUE_NUMBER=$(echo "$BRANCH_NAME" | sed 's/issue-\([0-9]*\).*/\1/')
        echo "BRANCH_NAME: $BRANCH_NAME"
        echo "ISSUE_NUMBER: $ISSUE_NUMBER"
        echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV


    - name: Update pull request template
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        debug: true
        script: |
          const { Octokit } = await import('@octokit/rest'); 
          // Инициализация Octokit с токеном GitHub
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
          
          const fs = require('fs');
          const issueNumber = process.env.ISSUE_NUMBER;
          const issueLink = `https://github.com/issues/${issueNumber}`;
          // Получаем номер PR из контекста
          const prNumber = context.payload.pull_request.number;
          
          /*
            # onst prNumber = process.env.GITHUB_REF.split('/')[2]; // Получить номер PR из GITHUB_REF
            # // Добавляем переменную окружения в файл GITHUB_ENV
            fs.appendFileSync(process.env.GITHUB_ENV, `PR_NUMBER=${prNumber}\n`);
          */
          
          // Получаем существующее описание PR
          // const { data: pullRequest } = await github.pulls.get({
          // Получаем описание PR через API GitHub
          const { data: pullRequest } = await octokit.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
          });

          // fs.appendFileSync(process.env.GITHUB_ENV, `PR_DATA=${JSON.stringify(pullRequest)}\n`);

          const updatedBody = pullRequest.body.replace(
            '<!-- ISSUE_LINK -->',
            `[Issue #${issueNumber}](${issueLink})`
          );

          // Обновляем описание PR
          await octokit.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: prNumber,
            body: updatedBody,
          });
     
    - name: Logs
      run: |
        "echo ${{ env.PR_NUMBER }} ${{ env.PR_DATA }}"